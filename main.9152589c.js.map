{"version":3,"sources":["scripts/main.js"],"names":["winning","score","field","prevField","buttonAction","document","querySelector","messages","querySelectorAll","messageLose","messageWin","gameScore","fieldLength","move","up","down","left","right","handleButtonClick","addNewNumber","hideAllMessages","innerHTML","classList","remove","add","render","handleKeyUp","e","JSON","parse","stringify","code","moveUp","moveDown","moveLeft","moveRight","isFieldEqual","includesZero","previousField","currentField","i","j","row","randomNumber","indexOf","allIndexZero","reduce","acc","el","push","randomZero","length","rowIndex","max","Math","floor","random","cell","isGameOver","index","className","filterZero","addZeros","summationNumbers","column","l","arr","filter","num","reverse","unshift","isWinning","forEach","message","some","includes","number","addEventListener"],"mappings":"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","file":"main.9152589c.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst buttonAction = document.querySelector('.button');\nconst messages = document.querySelectorAll('.message');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst gameScore = document.querySelector('.game-score');\nconst fieldLength = 4;\n\nlet winning;\nlet score;\nlet field;\nlet prevField;\n\nconst move = {\n  up: 'ArrowUp',\n  down: 'ArrowDown',\n  left: 'ArrowLeft',\n  right: 'ArrowRight',\n};\n\nbuttonAction.addEventListener('click', handleButtonClick);\ndocument.addEventListener('keyup', handleKeyUp);\n\nfunction handleButtonClick() {\n  score = 0;\n  winning = false;\n\n  field = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  addNewNumber();\n  addNewNumber();\n\n  hideAllMessages();\n\n  buttonAction.innerHTML = 'Reset';\n  buttonAction.classList.remove('start');\n  buttonAction.classList.add('restart');\n\n  render();\n}\n\nfunction handleKeyUp(e) {\n  prevField = JSON.parse(JSON.stringify(field));\n\n  switch (e.code) {\n    case move.up:\n      moveUp();\n      break;\n\n    case move.down:\n      moveDown();\n      break;\n\n    case move.left:\n      moveLeft();\n      break;\n\n    case move.right:\n      moveRight();\n      break;\n\n    default:\n      return;\n  }\n\n  render();\n\n  if (!isFieldEqual(prevField, field) && includesZero()) {\n    addNewNumber();\n  }\n\n  render();\n}\n\nfunction isFieldEqual(previousField, currentField) {\n  for (let i = 0; i < fieldLength; i++) {\n    for (let j = 0; j < fieldLength; j++) {\n      if (previousField[i][j] !== currentField[i][j]) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction addNewNumber() {\n  if (includesZero()) {\n    let row = field[randomNumber(4)];\n\n    while (row.indexOf(0) === -1) {\n      row = field[randomNumber(4)];\n    }\n\n    const allIndexZero = row.reduce((acc, el, i) => {\n      if (el === 0) {\n        acc.push(i);\n      }\n\n      return acc;\n    }, []);\n\n    const randomZero = allIndexZero[randomNumber(allIndexZero.length)];\n    const rowIndex = field.indexOf(row);\n\n    field[rowIndex][randomZero] = randomNumber();\n  }\n}\n\nfunction randomNumber(max) {\n  if (!max) {\n    return Math.random() < 0.2 ? 4 : 2;\n  }\n\n  return Math.floor(Math.random() * max);\n}\n\nfunction render() {\n  const cell = document.querySelectorAll('.field-cell');\n\n  gameScore.innerHTML = score;\n\n  if (winning) {\n    messageWin.classList.remove('hidden');\n  }\n\n  if (!includesZero() && isGameOver()) {\n    messageLose.classList.remove('hidden');\n  }\n\n  for (let i = 0; i < fieldLength; i++) {\n    for (let j = 0; j < fieldLength; j++) {\n      const index = i * fieldLength + j;\n\n      if (field[i][j] !== 0) {\n        cell[index].innerHTML = field[i][j];\n\n        cell[index].className = `\n          field-cell field-cell--show field-cell--${field[i][j]}\n        `;\n      } else {\n        cell[index].innerHTML = '';\n        cell[index].className = 'field-cell';\n      }\n    }\n  }\n}\n\nfunction moveLeft() {\n  for (let i = 0; i < fieldLength; i++) {\n    let row = filterZero(field[i]);\n\n    addZeros(row);\n\n    summationNumbers(row);\n\n    row = filterZero(row);\n\n    addZeros(row);\n\n    field[i] = row;\n  }\n};\n\nfunction moveRight() {\n  for (let i = 0; i < fieldLength; i++) {\n    let row = filterZero(field[i]);\n\n    addZeros(row, 'reverse');\n\n    summationNumbers(row, 'reverse');\n\n    row = filterZero(row);\n\n    addZeros(row, 'reverse');\n\n    field[i] = row;\n  }\n};\n\nfunction moveUp() {\n  for (let i = 0; i < fieldLength; i++) {\n    let column = [];\n\n    for (let j = 0; j < fieldLength; j++) {\n      column.push(field[j][i]);\n    }\n\n    column = filterZero(column);\n\n    addZeros(column);\n\n    summationNumbers(column);\n\n    column = filterZero(column);\n\n    addZeros(column);\n\n    for (let l = 0; l < fieldLength; l++) {\n      field[l][i] = column[l];\n    }\n  }\n};\n\nfunction moveDown() {\n  for (let i = 0; i < fieldLength; i++) {\n    let column = [];\n\n    for (let j = 0; j < fieldLength; j++) {\n      column.push(field[j][i]);\n    }\n\n    column = filterZero(column);\n\n    addZeros(column, 'reverse');\n\n    summationNumbers(column, 'reverse');\n\n    column = filterZero(column);\n\n    addZeros(column, 'reverse');\n\n    for (let l = 0; l < fieldLength; l++) {\n      field[l][i] = column[l];\n    }\n  }\n};\n\nfunction filterZero(arr) {\n  return arr.filter(num => num !== 0);\n}\n\nfunction addZeros(arr, reverse) {\n  if (reverse) {\n    while (arr.length < 4) {\n      arr.unshift(0);\n    }\n  } else {\n    while (arr.length < 4) {\n      arr.push(0);\n    }\n  }\n}\n\nfunction summationNumbers(arr, reverse) {\n  if (reverse) {\n    for (let i = fieldLength - 1; i >= 0; i--) {\n      if (arr[i] === arr[i - 1] && arr[i] !== 0) {\n        arr[i] += arr[i - 1];\n        isWinning(arr[i]);\n        arr[i - 1] = 0;\n        score += arr[i];\n      }\n    }\n  } else {\n    for (let i = 0; i < fieldLength - 1; i++) {\n      if (arr[i] === arr[i + 1] && arr[i] !== 0) {\n        arr[i] += arr[i + 1];\n        isWinning(arr[i]);\n        arr[i + 1] = 0;\n        score += arr[i];\n      }\n    }\n  }\n}\n\nfunction hideAllMessages() {\n  messages.forEach(message => message.classList.add('hidden'));\n}\n\nfunction includesZero() {\n  return field.some(row => row.includes(0));\n}\n\nfunction isGameOver() {\n  for (let i = 0; i < fieldLength; i++) {\n    for (let j = 0; j < fieldLength - 1; j++) {\n      if (field[i][j] === field[i][j + 1]) {\n        return false;\n      }\n    }\n  }\n\n  for (let i = 0; i < fieldLength - 1; i++) {\n    for (let j = 0; j < fieldLength; j++) {\n      if (field[i][j] === field[i + 1][j]) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction isWinning(number) {\n  if (number === 2048) {\n    winning = true;\n  }\n};\n"]}